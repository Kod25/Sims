!function(e){function t(a){if(n[a])return n[a].exports;var i=n[a]={exports:{},id:a,loaded:!1};return e[a].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var n={};return t.m=e,t.c=n,t.p="/static/",t(0)}([function(e,t,n){e.exports=n(6)},function(e,t){e.exports='<section ng-form name=calendarApiConfigForm layout=column> <md-input-container class=md-block> <label translate>tb.rulenode.calendar-id</label> <input ng-required=true name=calendarId ng-model=configuration.calendarId> <div ng-messages=calendarApiConfigForm.calendarId.$error> <div ng-message=required translate>tb.rulenode.calendar-id-required</div> </div> </md-input-container> <md-input-container class=md-block> <label translate>tb.rulenode.request-method</label> <md-select ng-model=configuration.requestMethod ng-disabled=$root.loading> <md-option ng-repeat="type in ruleNodeTypes.httpRequestType" ng-value=type> {{ type }} </md-option> </md-select> </md-input-container> <div class=tb-container ng-class="configuration.serviceAccountKeyFileName ? \'ng-valid\' : \'ng-invalid\'"> <label class=tb-label translate>tb.rulenode.calendar-service-account-key</label> <div flow-init={singleFile:true} flow-file-added=serviceAccountFileAdded($file) class=tb-file-select-container> <div class=tb-file-clear-container> <md-button ng-click=clearServiceAccountFile() class="tb-file-clear-btn md-icon-button md-primary" aria-label="{{ \'action.remove\' | translate }}"> <md-tooltip md-direction=top> {{ \'action.remove\' | translate }} </md-tooltip> <md-icon aria-label="{{ \'action.remove\' | translate }}" class=material-icons>close</md-icon> </md-button> </div> <div class="alert tb-flow-drop" flow-drop> <label for=serviceAccountKeySelect translate>tb.rulenode.drop-file</label> <input class=file-input flow-btn id=serviceAccountKeySelect> </div> </div> </div> <div class=dropdown-messages> <div ng-if=!configuration.serviceAccountKeyFileName class=tb-error-message translate>tb.rulenode.no-file</div> <div ng-if=configuration.serviceAccountKeyFileName>{{configuration.serviceAccountKeyFileName}}</div> </div> </section> '},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function i(e){var t=function(t,n,a,i){var l=r.default;n.html(l),t.$watch("configuraton",function(e,n){angular.equals(e,n)||i.$setViewValue(t.configuration)}),i.$render=function(){t.configuraton=i.$viewValue},e(n.contents())(t)};return{restrict:"E",require:"^ngModel",scope:{},link:t}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=i;var l=n(1),r=a(l)},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var i=n(2),l=a(i);t.default=angular.module("thingsboard.ruleChain.config.google",[]).directive("tbGoogleNodeCalendarApiCallConfig",l.default).name},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function i(e){(0,r.default)(e)}i.$inject=["$translateProvider"],Object.defineProperty(t,"__esModule",{value:!0}),t.default=i;var l=n(7),r=a(l)},function(e,t){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=angular.module("thingsboard.ruleChain.config.types",[]).constant("ruleNodesTypes",{httpRequestType:["GET","TEST"]}).name},function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var i=n(3),l=a(i),r=n(4),o=a(r),c=n(5),d=a(c);t.default=angular.module("thingsboard.ruleChain.config",[d.default,l.default]).config(o.default).name},function(e,t){"use strict";function n(e){var t={tb:{rulenode:{"msg-key":"Message key","input-key":"Input key","output-key":"Output key","calendar-id":"Calenar id","calendar-id-required":"Calendar id is required","request-method":"Request method","calendar-service-account-key":"Google Calendar service account key file","calendar-service-account-key-required":"Google Calendar service account key file is required","drop-file":"Drop a file or click to select a file to upload","no-file":"No file selected"}}};e.translations("en_US",t)}Object.defineProperty(t,"__esModule",{value:!0}),t.default=n}]);
//# sourceMappingURL=custom-nodes-config.js.map